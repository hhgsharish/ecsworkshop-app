# Workflow: Builds, packages, and deploys app
name: Deploy Application

# Trigger: Runs on app code changes
on:
  push:
    branches:
      - main
    paths:
      - 'frontend/**'
      - 'backend/**'

jobs:
  deploy-app:
    # Runner: Ubuntu for Docker
    runs-on: ubuntu-latest
    steps:
      # Checkout code
      - name: Checkout code
        uses: actions/checkout@v3

      # Verify Dockerfiles
      - name: Check app directories
        run: |
          ls -l frontend/Dockerfile || echo "Error: Frontend Dockerfile not found"
          ls -l backend/Dockerfile || echo "Error: Backend Dockerfile not found"
          if [ ! -f frontend/Dockerfile ] || [ ! -f backend/Dockerfile ]; then exit 1; fi

      # Configure AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      # Log in to ECR
      - name: Log in to ECR
        run: |
          aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com

      # Package frontend image
      - name: Package frontend image
        run: |
          docker build -t ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com/my-app-repo:frontend-latest frontend
          docker images | grep my-app-repo | grep frontend-latest # Verify image
          docker run -d -p 8080:80 ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com/my-app-repo:frontend-latest
          sleep 5
          curl http://localhost:8080 || echo "Frontend test failed"
          docker stop $(docker ps -q) # Clean up
          echo "Frontend image packaged"

      # Package backend image
      - name: Package backend image
        run: |
          docker build -t ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com/my-app-repo:backend-latest backend
          docker images | grep my-app-repo | grep backend-latest # Verify image
          docker run -d -p 3000:3000 ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com/my-app-repo:backend-latest
          sleep 5
          curl http://localhost:3000/api/health || echo "Backend test failed"
          docker stop $(docker ps -q) # Clean up
          echo "Backend image packaged"

      # Push images to ECR
      - name: Push images to ECR
        run: |
          docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com/my-app-repo:frontend-latest
          docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com/my-app-repo:backend-latest

      # Update ECS services
      - name: Update ECS services
        run: |
          aws ecs update-service --cluster my-ecs-cluster --service frontend-service --desired-count 1 --region us-east-1
          aws ecs update-service --cluster my-ecs-cluster --service backend-service --desired-count 1 --region us-east-1